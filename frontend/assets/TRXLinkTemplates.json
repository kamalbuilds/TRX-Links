{
  "donation": {
    "html": "<style>\n.card {\nposition: relative;\nbackground-color: white;\nborder-radius: 15px;\npadding: 10px;\nwidth: 100%;\nmax-width: 600px;\nbox-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\nmargin-top: -20px;\n}\n.card img {\nmax-width: 600px;\nheight: auto;\nobject-fit: cover;\nborder-radius: 15px;\nmargin-bottom: -5px;\n}\n.content {\nbackground-color: #f7f9fa;\nborder-radius: 12px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\ngap: 5px;\nmargin-top: 5px;\n}\n.input {\ndisplay: flex;\nalign-items: center;\nbackground-color: white;\nborder: 1px solid #ccc;\nborder-radius: 12px;\npadding: 8px;\ngap: 5px;\n}\n.input img {\nwidth: 24px;\nheight: 24px;\n}\ninput[type='number'] {\nborder: none;\nbackground-color: transparent;\nfont-size: 16px;\nflex: 1;\npadding: 8px;\n}\nbutton {\nbackground-color: #1da1f2;\ncolor: white;\nborder: none;\npadding: 10px 18px;\nborder-radius: 12px;\nfont-size: 14px;\nfont-weight: bold;\ncursor: pointer;\nwidth: 100%;\ntransition: background-color 0.3s ease;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n}\nbutton:hover {\nbackground-color: #0f8de8;\n}\nbutton:disabled,\n.predefined-button:disabled {\ncursor: not-allowed;\nbackground-color: #ccc;\n}\nbutton.loading,\n.predefined-button.loading {\nbackground-image: linear-gradient(90deg, #0099ff 0%, #ff66cc 50%, #0099ff 100%);\nbackground-size: 200% 100%;\nanimation: gradient-animation 1s linear infinite;\n}\nbutton.success {\nbackground-color: #4caf50;\n}\n.checkmark {\ncolor: white;\nfont-size: 24px;\nmargin-right: 8px;\n}\n.predefined-buttons {\ndisplay: flex;\njustify-content: space-between;\nmargin-top: 10px;\n}\n.predefined-button {\nflex: 1;\nmargin: 0 5px;\n}\n\n@keyframes gradient-animation {\n0% {\nbackground-position: 100% 0;\n}\n100% {\nbackground-position: -100% 0;\n}\n}\n</style>\n<div class=\"card\" data-element-id=\"card\">\n<img src=\"https://cdn.thelifeyoucansave.org/uploads/2021/11/1.png\" alt=\"Background Image\" data-element-id=\"backgroundImage\" />\n<div class=\"content\" data-element-id=\"content\">\n<div class=\"input\" data-element-id=\"donationInputContainer\">\n<img src=\"https://etherscan.io/token/images/tethernew_32.png\" alt=\"USDT\" data-element-id=\"donationImage\"/>\n<input id=\"donationAmount\" type=\"number\" placeholder=\"Enter donation amount\" data-element-id=\"donationAmount\" />\n</div>\n<button id=\"donateButton\" data-element-id=\"donateButton\">Donate TRX</button>\n<div class=\"predefined-buttons\" data-element-id=\"predefinedButtons\">\n<button class=\"predefined-button\" value=\"10\" data-element-id=\"predefinedButton10\">Donate 10 TRX</button>\n<button class=\"predefined-button\" value=\"50\" data-element-id=\"predefinedButton50\">Donate 50 TRX</button>\n<button class=\"predefined-button\" value=\"100\" data-element-id=\"predefinedButton100\">Donate 100 TRX</button>\n</div>\n</div>\n</div>",
    "js": "const predefinedButtons = document.querySelectorAll('.predefined-button');\nconst donationAmountInput = document.getElementById('donationAmount');\nconst mainButton = document.getElementById('donateButton');\n\n// Function to set predefined donation amounts and handle button states\nfunction setAmount(amount) {\n  donationAmountInput.value = amount;\n  predefinedButtons.forEach((button) => { button.disabled = true; });\n  mainButton.classList.add('loading');\n  mainButton.disabled = true;\n  mainButton.innerHTML = 'Donating...';\n}\n\n// Function to connect to TronLink wallet and send donation\nasync function sendDonation(amount) {\n  const recipient = 'TSJYQL5vd1kGQu3Aedtkfug2UzCdAqN5mt'; // Replace with actual recipient address\n  const amountInSun = tronWeb.toSun(amount);\n  try {\n    const transaction = await tronWeb.transactionBuilder.sendTrx(recipient, amountInSun);\n    const signedTransaction = await tronWeb.trx.sign(transaction);\n    const result = await tronWeb.trx.sendRawTransaction(signedTransaction);\n    if (result.result) {\n      console.log('Transaction successful:', result.txid);\n      showSuccess();\n    } else {\n      throw new Error('Transaction failed');\n    }\n  } catch (error) {\n    console.error('Donation error:', error);\n    alert('Donation failed, please try again.');\n  }\n}\n\n// Function to display success message\nfunction showSuccess() {\n  predefinedButtons.forEach((button) => {\n    button.disabled = false;\n    button.classList.remove('loading');\n  });\n  mainButton.classList.remove('loading');\n  mainButton.classList.add('success');\n  mainButton.innerHTML = '<span class=\"checkmark\">✓</span> Donation Successful';\n  setTimeout(() => {\n    mainButton.classList.remove('success');\n    mainButton.disabled = false;\n    mainButton.innerHTML = 'Donate TRX';\n  }, 3000);\n}\n\n// Add event listeners for donation actions\nmainButton.addEventListener('click', async () => {\n  const amount = donationAmountInput.value;\n  if (isNaN(amount) || amount <= 0) {\n    alert('Please enter a valid donation amount.');\n    return;\n  }\n  await sendDonation(amount);\n});\n\npredefinedButtons.forEach((button) => {\n  button.addEventListener('click', () => {\n    setAmount(button.value);\n    const amount = document.getElementById('donationAmount').value;\n    sendDonation(amount);\n  });\n});",
    "name": "Donate using Tron"
  },
  "bridebevm": {
    "html": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Bridge Page</title>\n    <style>\n      body { font-family: Arial, sans-serif; background-color: #f0f0f0; margin: 0; } \n.card { width: 550px; display: flex; flex-direction: column; gap: 12px; background-color: #fff; border-radius: 15px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); padding: 20px; } \n.card-title { text-align: center; font-size: 24px; margin-bottom: 20px; } \n.flex { display: flex; align-items: center; justify-content: center; } \n.select-trigger { width: 100%; padding: 16px; border: 1px solid #ccc; border-radius: 12px; background-color: #fff; display: flex; align-items: center; gap: 5px; } \n.gap-4 { gap: 16px; } \n.gap-8 { gap: 32px; } \n.token-selection { display: flex; flex-direction: column; align-items: baseline; gap: 8px; width: 100%; } \n.bridge-select { width: 100%; } \n.select-content { border: 1px solid #ccc; border-radius: 5px; background-color: #fff; margin-top: 5px; } \n.input-section { display: flex; flex-direction: column; align-items: baseline; } \n.input { display: flex; align-items: center; background-color: white; border: 1px solid #ccc; border-radius: 12px; padding: 8px; gap: 5px; } \ninput[type=\"number\"] { border: none; background-color: transparent; font-size: 16px; flex: 1; padding: 8px; } \ninput[type=\"text\"] { border: none; background-color: transparent; font-size: 16px; flex: 1; padding: 8px; } \n.button { padding: 14px 18px; border: none; border-radius: 5px; background-color: #000; color: #fff; cursor: pointer; margin-top: 10px; } \n</style> \n</head> \n<body> \n  <div class=\"card\"> \n    <div class=\"card-title\">Bridge</div> \n    <div class=\"flex gap-8\"> \n      <div class=\"flex gap-2 items-center\"> \n        <img src=\"https://assets.coingecko.com/coins/images/1/standard/bitcoin.png?1696501400\" alt=\"Bitcoin\" width=\"40\" /> \n        <h3 class=\"text-xl\">Bitcoin</h3> \n      </div> \n      <div class=\"flex gap-2 items-center\"> \n        <img src=\"https://avatars.githubusercontent.com/u/138027177?s=280&v=4\" alt=\"BEVM\" width=\"40\" /> \n        <h3 class=\"text-xl\">BEVM</h3> \n      </div> \n    </div> \n    <div class=\"token-selection\"> \n      <div class=\"bridge-select\"> \n        <select id=\"token\" class=\"select-trigger\"> \n          <option value=\"\" disabled selected>Select a token</option> \n          <option value=\"9b664bdd6f5ed80d8d88957b63364c41f3ad4efb8eee11366aa16435974d9333i0\">BRC20_SATS</option> \n          <option value=\"b61b0172d95e266c18aea0c624db987e971a5d6d4ebc2aaed85da4642d635735i0\">BRC20_ORDI</option> \n          <option value=\"77df24c9f1bd1c6a606eb12eeae3e2a2db40774d54b839b5ae11f438353ddf47i0\">BRC20_RATS</option> \n          <option value=\"edc052335f914ee47a758cff988494fbb569d820e66ac8581008e44b26dcdb43i0\">BRC20_BTCS</option> \n          <option value=\"00eeaf44729e61190a34cb01d8230b68285c576568b7314dfbc0ee98a84a7128i0\">BRC20_AINN</option> \n          <option value=\"DOG•GO•TO•THE•MOON\">RUNES_DOG•GO•TO•THE•MOON</option> \n          <option value=\"SATOSHI•NAKAMOT0\">RUNES_SATOSHI•NAKAMOT0</option> \n        </select> \n      </div> \n    </div> \n    <div class=\"input\"> \n      <input type=\"number\" id=\"amount\" class=\"input\" placeholder=\"Enter Amount\" /> \n    </div> \n    <div class=\"input\"> \n      <input type=\"text\" id=\"RecipientAddress\" class=\"input\" placeholder=\"Enter Recipient address\" /> \n    </div> \n    <button id=\"bridgeButton\" class=\"button\">Bridge BRC20</button> \n    <button id=\"transfer\" class=\"button\">Bridge Rune</button> \n    <button id=\"transferBTC\" class=\"button\">Bridge BTC</button> \n  </div> \n</body>\n</html>",
    "js": "document.addEventListener(\"DOMContentLoaded\", function () {\n        const BTCTokenList = [\n          {\n          \"chainId\": 11501,\n          \"address\": \"0x88290434e8F5a2Fd3Dc3ef31A1bEF19d74372C24\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 SATS\",\n          \"symbol\": \"SATS\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/sats.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0xe3D7fd661Eb7A141fC485E4f2679995e4fEf0298\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 ORDI\",\n          \"symbol\": \"ORDI\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/ordi.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x0AE14249b5CD93d63BE2F0394A377F244fB06f9D\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 RATS\",\n          \"symbol\": \"RATS\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/rats.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x50D38DB58f494ded068e4B0c051449fa012e5BB4\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 BTCS\",\n          \"symbol\": \"BTCS\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/btcs.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x00D13C732e73Da7D1376f84cd2D0FeF9E792b4e7\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 AINN\",\n          \"symbol\": \"AINN\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/ainn.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x8d6F6210EdA57cE98f8293cEbCfe0f730e142895\",\n          \"type\": \"RUNES\",\n          \"name\": \"Bridged Runes DOG•GO•TO•THE•MOON\",\n          \"symbol\": \"🐕\",\n          \"decimals\": 5,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/dm.png\"\n      },\n\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x2A9AF616b6D57d50Dd93A410FA64055EE03198d7\",\n          \"type\": \"RUNES\",\n          \"name\": \"Bridged Runes SATOSHI•NAKAMOTO\",\n          \"symbol\": \"丰\",\n          \"decimals\": 8,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/sn.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x915247bf09471922e2c6da6f69fc9114708e8a26\",\n          \"type\": \"ERC20\",\n          \"name\": \"Bridged USD Coin\",\n          \"symbol\": \"USDC\",\n          \"decimals\": 6,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/usdc.svg\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0xB1bc95f4D6347E800486dA8fE692963E2e18813c\",\n          \"type\": \"ERC20\",\n          \"name\": \"Wrapped BEVM\",\n          \"symbol\": \"WBEVM\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/bevm.png\"\n      }\n      ];\n        \n        const runeTokenList = [\n          {\n          \"chainId\": 11501,\n          \"address\": \"0x88290434e8F5a2Fd3Dc3ef31A1bEF19d74372C24\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 SATS\",\n          \"symbol\": \"SATS\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/sats.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0xe3D7fd661Eb7A141fC485E4f2679995e4fEf0298\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 ORDI\",\n          \"symbol\": \"ORDI\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/ordi.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x0AE14249b5CD93d63BE2F0394A377F244fB06f9D\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 RATS\",\n          \"symbol\": \"RATS\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/rats.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x50D38DB58f494ded068e4B0c051449fa012e5BB4\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 BTCS\",\n          \"symbol\": \"BTCS\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/btcs.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x00D13C732e73Da7D1376f84cd2D0FeF9E792b4e7\",\n          \"type\": \"BRC20\",\n          \"name\": \"Bridged BRC20 AINN\",\n          \"symbol\": \"AINN\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/ainn.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x8d6F6210EdA57cE98f8293cEbCfe0f730e142895\",\n          \"type\": \"RUNES\",\n          \"name\": \"Bridged Runes DOG•GO•TO•THE•MOON\",\n          \"symbol\": \"🐕\",\n          \"decimals\": 5,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/dm.png\"\n      },\n\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x2A9AF616b6D57d50Dd93A410FA64055EE03198d7\",\n          \"type\": \"RUNES\",\n          \"name\": \"Bridged Runes SATOSHI•NAKAMOTO\",\n          \"symbol\": \"丰\",\n          \"decimals\": 8,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/sn.png\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0x915247bf09471922e2c6da6f69fc9114708e8a26\",\n          \"type\": \"ERC20\",\n          \"name\": \"Bridged USD Coin\",\n          \"symbol\": \"USDC\",\n          \"decimals\": 6,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/usdc.svg\"\n      },\n      {\n          \"chainId\": 11501,\n          \"address\": \"0xB1bc95f4D6347E800486dA8fE692963E2e18813c\",\n          \"type\": \"ERC20\",\n          \"name\": \"Wrapped BEVM\",\n          \"symbol\": \"WBEVM\",\n          \"decimals\": 18,\n          \"logoURI\": \"https://raw.githubusercontent.com/btclayer2/bridge-tokenlist/main/asset/bevm.png\"\n      }\n      ];\n        const selectTrigger = document.getElementById(\"selectTrigger\");\n        const selectContent = document.getElementById(\"selectContent\");\n        let isOpen = false;\n\n        selectTrigger.addEventListener(\"click\", function () {\n          isOpen = !isOpen;\n          selectContent.style.display = isOpen ? \"block\" : \"none\";\n        });\n\n        BTCTokenList.forEach(function (token) {\n          const item = document.createElement(\"div\");\n          item.textContent = token.name;\n          item.addEventListener(\"click\", function () {\n            selectTrigger.textContent = token.symbol;\n            selectContent.style.display = \"none\";\n            isOpen = false;\n          });\n          selectContent.appendChild(item);\n        });\n        const bridgeButton = document.getElementById(\"bridgeButton\");\n        bridgeButton.addEventListener(\"click\", function () {\n          const selectedToken = selectTrigger.textContent;\n          const amount = document.getElementById(\"amount\").value;\n          const recipientAddress = document.getElementById(\"RecipientAddress\").value;\n          console.log(`Bridging ${amount} ${selectedToken} to ${recipientAddress}`);\n        });\n        const transfer = document.getElementById(\"transfer\");\n        transfer.addEventListener(\"click\", async () => {\n          await bridgeBTC(\n            document.getElementById(\"RecipientAddress\").value,\n            document.getElementById(\"amount\").value,\n            runeTokenList[4].symbol,\n            runeTokenList[4].decimals,\n            runeTokenList[4].address,\n            runeTokenList[4].chainId\n          );\n        });\n        const transferBTC = document.getElementById(\"transferBTC\");\n        transferBTC.addEventListener(\"click\", async () => {\n          await bridgeBTC(\n            document.getElementById(\"RecipientAddress\").value,\n            document.getElementById(\"amount\").value,\n            runeTokenList[5].symbol,\n            runeTokenList[5].decimals,\n            runeTokenList[5].address,\n            runeTokenList[5].chainId\n          );\n        });\n      });\n",
    "name": "Bridge"
  },
  "donateonbevm": {
    "html": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n<title data-element-id=\"pageTitle\">BEVM Donation Page</title>\n<style>\n      .card {\n        font-family: Arial, sans-serif;\n        position: relative;\n        background-color: white;\n        border-radius: 15px;\n        padding: 10px;\n        width: 100%;\n        max-width: 600px;\n        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        margin-top: -20px;\n      }\n\n      .backgroundCover {\n        width: 100%;\n        max-width: 600px;\n        height: auto;\n        object-fit: cover;\n        border-radius: 15px;\n        margin-bottom: -5px;\n      }\n\n      .content {\n        background-color: #f7f9fa;\n        border-radius: 12px;\n        padding: 10px;\n        display: flex;\n        flex-direction: column;\n        gap: 5px;\n        margin-top: 5px;\n      }\n\n      .token-selection {\n        display: flex;\n        flex-direction: column;\n        gap: 8px;\n        width: 100%;\n      }\n      .select-trigger {\n        width: 100%;\n        padding: 16px;\n        border: 1px solid #ccc;\n        border-radius: 12px;\n        background-color: #fff;\n        display: flex;\n        align-items: center;\n        gap: 5px;\n      }\n      .select-content {\n        border: 1px solid #ccc;\n        border-radius: 5px;\n        background-color: #fff;\n        margin-top: 5px;\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n        max-height: 340px;\n        overflow: scroll;\n        padding: 8px;\n      }\n\n      .select-content :hover {\n        background-color: #e4e4e4;\n        border-radius: 10px;\n        cursor: pointer;\n      }\n\n      .select-item {\n        display: flex;\n        flex-direction: row;\n        gap: 8px;\n        align-items: center;\n        padding: 8px;\n      }\n\n      .input {\n        display: flex;\n        align-items: center;\n        background-color: white;\n        border: 1px solid #ccc;\n        border-radius: 12px;\n        padding: 8px;\n        gap: 5px;\n      }\n\n      .input img {\n        width: 24px;\n        height: 24px;\n      }\n\n      input[type=\"number\"] {\n        border: none;\n        background-color: transparent;\n        font-size: 16px;\n        flex: 1;\n        padding: 8px;\n      }\n      input[type=\"text\"] {\n        border: none;\n        background-color: transparent;\n        font-size: 16px;\n        flex: 1;\n        padding: 8px;\n      }\n\n      .button {\n        padding: 10px 18px;\n        border: none;\n        border-radius: 5px;\n        background-color: #116eca;\n        color: #fff;\n        cursor: pointer;\n        margin-top: 20px;\n      }\n\n      button:hover {\n        background-color: #1d5790;\n      }\n\n      button:disabled,\n      .predefined-button:disabled {\n        cursor: not-allowed;\n        background-color: #ccc;\n      }\n\n      button.loading,\n      .predefined-button.loading {\n        background-image: linear-gradient(\n          90deg,\n          #0099ff 0%,\n          #ff66cc 50%,\n          #0099ff 100%\n        );\n        background-size: 200% 100%;\n        animation: gradient-animation 1s linear infinite;\n      }\n\n      button.success {\n        background-color: #4caf50;\n      }\n\n      .checkmark {\n        color: white;\n        font-size: 24px;\n        margin-right: 8px;\n      }\n\n      .predefined-buttons {\n        display: flex;\n        justify-content: space-between;\n        margin-top: 10px;\n      }\n\n      .predefined-button {\n        flex: 1;\n        margin: 0 5px;\n      }\n\n      @keyframes gradient-animation {\n        0% {\n          background-position: 100% 0;\n        }\n\n        100% {\n          background-position: -100% 0;\n        }\n      }\n    </style>\n  </head>\n  <body>\n    <div class=\"card\">\n      <img\n        src=\"https://cdn.thelifeyoucansave.org/uploads/2021/11/1.png\"\n        alt=\"Background Image\"\n        class=\"backgroundCover\"\n      />\n      <div class=\"content\">\n        <div class=\"token-selection\">\n          <label for=\"token\">Select Token</label>\n          <div class=\"bridge-select\">\n            <select id=\"token\" class=\"select-trigger\">\n              <option value=\"\" disabled selected>Select a token</option>\n              <option value=\"0x88290434e8F5a2Fd3Dc3ef31A1bEF19d74372C24\">\n                SATS\n              </option>\n              <option value=\"0xe3D7fd661Eb7A141fC485E4f2679995e4fEf0298\">\n                ORDI\n              </option>\n              <option value=\"0x0AE14249b5CD93d63BE2F0394A377F244fB06f9D\">\n                RATS\n              </option>\n              <option value=\"0x50D38DB58f494ded068e4B0c051449fa012e5BB4\">\n                BTCS\n              </option>\n              <option value=\"0x8d6F6210EdA57cE98f8293cEbCfe0f730e142895\">\n                DOG•GO•TO•THE•MOON\n              </option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"input\">\n          <input\n            id=\"donationAmount\"\n            type=\"number\"\n            placeholder=\"Enter donation amount\"\n          />\n        </div>\n        <div class=\"input\">\n          <input\n            id=\"recipientAddress\"\n            type=\"text\"\n            placeholder=\"Enter address\"\n          />\n        </div>\n        <div>\n          <button id=\"donateButton\" class=\"button\">Donate</button>\n        </div>\n      </div>\n    </div>\n</body>\n</html>",
    "js": "document.addEventListener(\"DOMContentLoaded\", function () { \n    let selectedTokenAddress; \n    let amount = 0; \n    const amountInput = document.getElementById(\"amount\"); \n    const bridgeBRC20Button = document.getElementById(\"bridgeButton\"); \n    const transferRunesButton = document.getElementById(\"transfer\"); \n    const transferBTC = document.getElementById(\"transferBTC\"); \n    const recievingAddress = document.getElementById(\"RecipientAddress\"); \n    const tokenSelect = document.getElementById(\"token\"); \n    \n    tokenSelect.addEventListener(\"change\", function () { \n      selectedTokenAddress = this.value; \n      console.log(\"Selected Token Address:\", selectedTokenAddress); \n    }); \n    \n    amountInput.addEventListener(\"input\", function (event) { \n      amount = Number(event.target.value); \n    }); \n    \n    bridgeBRC20Button.addEventListener(\"click\", function () { \n      if (!selectedTokenAddress || amount === 0) { \n        alert(\"Please select a token and enter a valid amount.\"); \n        return; \n      } \n      const input = { \n        selectedTokenAddress, \n        amount, \n      }; \n      console.log(\"input\", input); \n    }); \n    \n    async function handleTransferRune() { \n      const unisat = window.unisat; \n      let address = await unisat.getAccounts(); \n      if (!address[0]) { \n        address = await unisat.requestAccounts(); \n        console.log(\"addressConnected:\", addressConnected); \n      } \n      console.log(\"address:\", unisat, address[0]); \n\n      const body = { \n        commit_fee_rate: \"10\", \n        reveal_fee_rate: \"11.1\", \n        source: address[0], \n        receive_infos: [ \n          { \n            destination: \n              \"bc1pfddd3h32hur4xm7m4ltn5ym5llmfx0kxch0tgwlzqdljj4xtsmws0z48fn\", \n            rune: selectedTokenAddress, \n            amount: amount.toString(), \n          }, \n        ], \n        postage: 546, \n        op_return: recievingAddress.value, \n      }; \n\n      try { \n        const response = await fetch( \n          \"https://ord.bevm.io/mainnet/TransferRunes\", \n          { \n            method: \"POST\", \n            headers: { \n              \"Content-Type\": \"application/json\", \n            }, \n            body: JSON.stringify(body), \n          } \n        ); \n        const res = await response.json(); \n        console.log(\"REs >>>\", res); \n\n        if (res.commit_psbt) { \n          const psbt = res.commit_psbt; \n          let signedTx = await window.unisat.signPsbt(psbt); \n          console.log(\"Signed Transaction:\", signedTx); \n          let txid = await window.unisat.pushPsbt(signedTx); \n          console.log(\"Transaction ID:\", txid); \n        } \n      } catch (error) { \n        console.log(\"Error >>\", error); \n      } \n    } \n\n    transferRunesButton.addEventListener(\"click\", handleTransferRune); \n\n    async function handleTransferBTC() { \n      const unisat = window.unisat; \n      let address = await unisat.getAccounts(); \n      if (!address[0]) { \n        address = await unisat.requestAccounts(); \n        console.log(\"addressConnected:\", addressConnected); \n      } \n      console.log(\"address:\", unisat, address[0]); \n      console.log(recievingAddress.value, \"transfering btc\"); \n      const body = { \n        commit_fee_rate: \"1\", \n        source: address[0], \n        destination: \n          \"bc1pych5yegawx5ua7te4um68c09uam7wtv80x87hm7w8ljmqxqwh6js73p2f0\", \n        amount: amount, \n        op_return: recievingAddress.value, \n      }; \n\n      try { \n        const response = await fetch( \n          \"https://ord.bevm.io/mainnet/TransferBtc\", \n          { \n            method: \"POST\", \n            headers: { \n              \"Content-Type\": \"application/json\", \n            }, \n            body: JSON.stringify(body), \n          } \n        ); \n        const res = await response.json(); \n        console.log(\"REs >>>\", res); \n\n        if (res.commit_psbt) { \n          const psbt = res.commit_psbt; \n          let signedTx = await window.unisat.signPsbt(psbt); \n          console.log(\"Signed Transaction:\", signedTx); \n          let txid = await window.unisat.pushPsbt(signedTx); \n          console.log(\"Transaction ID:\", txid); \n        } \n      } catch (error) { \n        console.log(\"Error >>\", error); \n      } \n    } \n\n    transferBTC.addEventListener(\"click\", handleTransferBTC); \n\n    async function handleTransferBRC20() { \n      const unisat = window.unisat; \n      let address = await unisat.getAccounts(); \n      if (!address[0]) { \n        address = await unisat.requestAccounts(); \n        console.log(\"addressConnected:\", addressConnected); \n      } \n      console.log(\"address:\", unisat, address[0] , selectedTokenAddress); \n\n      const body = { \n        commit_fee_rate: \"10\", \n        reveal_fee_rate: \"11.1\", \n        source: address[0], \n        destination: \"bc1pne4yqreac05vns6w9sxjj8udhcl2u07g62mx9hsxsldrfwmealfqegrmfh\", \n        amount: amount.toString(), \n        outpoint: [ selectedTokenAddress], \n        postage: 546, \n        op_return: recievingAddress.value, \n      }; \n\n      try { \n        const response = await fetch( \n          \"https://ord.bevm.io/mainnet/TransferOutpoints\", \n          { \n            method: \"POST\", \n            headers: { \n              \"Content-Type\": \"application/json\", \n            }, \n            body: JSON.stringify(body), \n          } \n        ); \n        const res = await response.json(); \n        console.log(\"REs >>>\", res); \n\n        if (res.commit_psbt) { \n          const psbt = res.commit_psbt; \n          let signedTx = await window.unisat.signPsbt(psbt); \n          console.log(\"Signed Transaction:\", signedTx); \n          let txid = await window.unisat.pushPsbt(signedTx); \n          console.log(\"Transaction ID:\", txid); \n        } \n      } catch (error) { \n        console.log(\"Error >>\", error); \n      } \n    } \n\n    bridgeBRC20Button.addEventListener(\"click\", handleTransferBRC20); \n  });",
    "name": "Donate on Tron using TRX-20"
  }
}